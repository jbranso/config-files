#+TITLE:Emacs Cheatsheat
#+OPTIONS: H:10

include gnus manual here eh?

* dired commands
  - ~n~ next line
  - ~p~ previous line
  - ~m~ make the current file under point
  - ~u~ unmark the current file under point
  - ~* /~ mark all directories
  - ~* *~ mark all executables
  - ~* s~ mark all files in the current sub-directory
  - ~% m REGEXP <RET>  mark files based on a regular expression
  - ~Q~ dired-do-query-replace-regexp lets you search and replace all marked files
    -  Press y, to replace the current match
    -  press ~n~ to not skip the current match
    -  press ~!~ to replace all the matches in the current buffer
    -  Press ~Y~ to replace all the remaining matches without question
  - how to recursively search and replace

    M-x find-name-dired: you will be prompted for a root directory and a filename pattern, but this file name pattern uses find’s
    version of grep.  So it does not understand “.*“.  Instead “*” is equivalent to “.*”
    Press t to "toggle mark" for all files found.
    Press Q for "Query-Replace in Files...": you will be prompted for query/substitution regexps.
    Proceed as with query-replace-regexp: SPACE to replace and move to next match, n to skip a match, etc.
      -  Press y, to replace the current match
      -  press ~n~ to not skip the current match
      -  press ~!~ to replace all the matches in the current buffer
      -  Press ~Y~ to replace all the remaining matches without question

* Fixing bugs in your init-file
  https://github.com/Malabarba/elisp-bug-hunter
* Registers
  Number Registers

  -`C-u number C-x r n r`
  Store number into register r (number-to-register).

  `C-u number C-x r + r`
  If r contains a number, increment the number in that register by number. Note that command C-x r + (increment-register) behaves differently if r contains text. See Text Registers.

  `C-x r i r`
  Insert the number from register r into the buffer.

  `C-x r i` is the same command used to insert any other sort of register contents into the buffer. `C-x r +` with no numeric argument increments the register value by 1; `C-x r n` with no numeric argument stores zero in the register.
* Using macros
  - `C-c <letter>` begin recording keyboard macro
  - `C-c <letter>` end recording keyboard macro
  - `@ <letter>` perform keyboard macro
  - `C-x Q`  prompt the user for input
* helm mode
  HOLY BLIMEY COW!!! THIS MODE IS AWESOME enable it!

  C-c C-f helm-find-files

  In this mode typing "~/ manage js$"
  will display a list of files in my home directory that contain the work 'manage' and end is js

  Typing C-l will display the files is the parent directory
  Typing C-z when point is on a directory, will show the files in that directory

  Helm has nth commands. Instead of typing tab to get to the action menu
  just press C-e for the 2nd action
  and C-j for the 3rd action.
  You can also bind a key to an action menu
  (define-key helm-map (kbd "<C-tab>") 'helm-select-4th-action)

  C-c C-u lets you view an image

  Apparently helm lets you open files externally in helm-find-files with C-c C-x (not working though)

  I can make personal actions on to run on files via eshell WOW!!!!

  C-SPC will mark files that you can perform actions on

  You can then hit copy files in the action menu, which will let you select a new destionation to copy the files. so cool!
  You can do the same thing from the action menu with rename, symlink, hardlink

  helm has support for etags
  C-h e  will search the tags file
  the above should create the TAGS file with tags, but it's not working
  find . -iregex .*\.el$ | xargs etags

  check out pcomplete extension
  https://github.com/thierryvolpiatto/pcomplete-extension

  I can also write my own helm commands cool!
